<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Color="clr-namespace:WPF.UILib.ColorSchemes;assembly=WPF.UILib"
    xmlns:Dimension="clr-namespace:WPF.UILib.Dimensions;assembly=WPF.UILib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WPF.UILib.Controls;component/Control/Base/ControlBase.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource {x:Static Color:ColorsKey.BottomButtonAreaBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlForegroundBrush}}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlBorderBrush}}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="{StaticResource NotoSans Regular}" />
    </Style>

    <Style x:Key="ListViewItem.Base" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlForegroundBrush}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static Dimension:Dimensions.BorderThickness}}" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource {x:Static Dimension:Dimensions.CornerRadius}}" />

                        <GridViewRowPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#9d9d9d" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#9d9d9d" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#8893adc7" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

        </Style.Triggers>

    </Style>

    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlForegroundBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static Dimension:Dimensions.BorderThickness}}" />
    </Style>

</ResourceDictionary>