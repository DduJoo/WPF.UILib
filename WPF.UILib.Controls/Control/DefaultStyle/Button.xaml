<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Color="clr-namespace:WPF.UILib.ColorSchemes;assembly=WPF.UILib"
    xmlns:Dimension="clr-namespace:WPF.UILib.Dimensions;assembly=WPF.UILib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WPF.UILib.Controls;component/Control/Base/ControlBase.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="XBorder"
                        BorderBrush="{DynamicResource {x:Static Color:ColorsKey.DefalutControlBorderBrush}}"
                        BorderThickness="{DynamicResource {x:Static Dimension:Dimensions.BorderThickness}}"
                        CornerRadius="{DynamicResource {x:Static Dimension:Dimensions.CornerRadius}}">

                        <Label
                            x:Name="xLabel"
                            Margin="1"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Content="{TemplateBinding Content}">
                            <Label.Style>
                                <Style BasedOn="{StaticResource Label.Base}" TargetType="{x:Type Label}">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlForegroundBrush}}" />

                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlIsOverForegroundBrush}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlBackgroundBrush}}" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static Color:ColorsKey.DefalutControlIsOverBackgroundBrush}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="XBorder" Property="Background" Value="{DynamicResource {x:Static Color:ColorsKey.DisableBackgroundBrush}}" />
                            <Setter TargetName="xLabel" Property="Foreground" Value="{DynamicResource {x:Static Color:ColorsKey.DisableForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>